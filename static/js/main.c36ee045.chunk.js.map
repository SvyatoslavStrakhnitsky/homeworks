{"version":3,"sources":["p2-homeworks/h5/Header.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h5/pages/Error404.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Error404","className","s","page","content","Junior","JuniorPlus","Message","props","style","message","avatar","src","alt","angle","name","text","time","messageData","Date","toLocaleTimeString","slice","HW1","Affair","items","affair","priority","buttonX","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","buttons","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onKeyPressHandler","inputClass","errorInput","someClass","value","onChange","onKeyPress","onBlur","buttonAdd","color","GreetingContainer","users","addUserCallback","setName","setError","alert","length","e","newName","currentTarget","trim","key","HW3","setUsers","newUser","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","blue","disabled","SuperEditableSpan","autoFocus","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","editableSpan","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","defaultValue","PreJunior","PATH","Routes","path","exact","render","to","Header","links","link","activeClassName","active","square","HW5","bgc","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.c36ee045.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"links\":\"Header_links__ZSCs8\",\"link\":\"Header_link__35XRf\",\"active\":\"Header_active__3Qc0s\",\"square\":\"Header_square__1QoyH\",\"bgc\":\"Header_bgc__2rRct\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3L7Ez\",\"avatar\":\"Message_avatar__2jvoN\",\"content\":\"Message_content__18dod\",\"name\":\"Message_name__3ogQP\",\"text\":\"Message_text__3JhcQ\",\"time\":\"Message_time__1ewpU\",\"angle\":\"Message_angle__1Bb31\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Affairs_items__3YLsY\",\"buttonX\":\"Affairs_buttonX__18DoK\",\"buttons\":\"Affairs_buttons__mtrox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__3gNMb\",\"errorInput\":\"Greeting_errorInput__ViaYg\",\"error\":\"Greeting_error__2PhVO\",\"buttonAdd\":\"Greeting_buttonAdd__2SwGQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__FMWVn\",\"errorInput\":\"SuperInputText_errorInput__1Fn6b\",\"error\":\"SuperInputText_error__rsALi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Error404_page__2EWpc\",\"content\":\"Error404_content__104Vr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1mD9r\",\"column\":\"HW4_column__E_16h\",\"testSpanError\":\"HW4_testSpanError__2rU70\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__hHn41\",\"red\":\"SuperButton_red__9eK1w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1LVFp\",\"spanClassName\":\"SuperCheckbox_spanClassName__3hCLZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1mYBb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpan\":\"SuperEditableSpan_editableSpan__20kRx\"};","import React from 'react'\r\nimport s from './Error404.module.css'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.page}>\r\n            <div className={s.content}>\r\n                <div>404</div>\r\n                <div>Page not found!</div>\r\n                <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react'\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            Junior\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior\r\n\r\n","import React from 'react'\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n            Junior+\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus\r\n\r\n","import React from 'react'\r\nimport style from './Message.module.css'\r\n\r\ntype MessageDataPropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessageDataPropsType) {\r\n    return (\r\n        <div className={style.message}>\r\n            <img className={style.avatar} src={props.avatar} alt=\"avatar\"/>\r\n            <div className={style.angle}/>\r\n            <div className={style.content}>\r\n                <div className={style.name}>{props.name}</div>\r\n                <div className={style.text}>{props.message}</div>\r\n                <div className={style.time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from './Message'\r\n\r\n\r\nconst messageData = {\r\n    avatar: 'https://i.pinimg.com/originals/9c/77/46/9c7746225873e02d83b9315501b8dd2f.jpg',\r\n    name: 'Sviatoslav',\r\n    message: 'npm start нажимал?',\r\n    time: new Date().toLocaleTimeString().slice(0, 5)\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport s from \"./Affairs.module.css\"\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number) => void// need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }// need to fix\r\n\r\n    return (\r\n        <div className={s.items}>\r\n            <div>\r\n                <span>{props.affair.name}</span>\r\n            </div>\r\n            <div>\r\n                <span> {props.affair.priority}</span>\r\n                <button className={s.buttonX} onClick={deleteCallback}>X</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from \"./Affairs.module.css\";\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => { props.setFilter('all') } // need to fix\r\n    const setHigh = () => { props.setFilter('high') }\r\n    const setMiddle = () => { props.setFilter('middle') }\r\n    const setLow = () => { props.setFilter('low') }\r\n\r\n    return (\r\n        <div className={s.buttons}>\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\nimport s from './Affairs.module.css'\r\n\r\n// types\r\nexport type AffairPriorityType = 'low' | 'middle' | 'high'\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n    else return affairs.filter( a => a.priority === filter)\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter( a => a._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div >\r\n                <Affairs\r\n                    data={filteredAffairs}\r\n                    setFilter={setFilter}\r\n                    deleteAffairCallback={deleteAffairCallback}\r\n                />\r\n            </div>\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ButtonHTMLAttributes, ChangeEvent, KeyboardEvent, KeyboardEventHandler, MouseEventHandler} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n    onKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, onKeyPressHandler} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.errorInput : s.someClass// need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <input value={name}\r\n                       onChange={setNameCallback}\r\n                       className={inputClass}\r\n                       onKeyPress={onKeyPressHandler}\r\n                       onBlur={setNameCallback}/>\r\n                <button className={s.buttonAdd} onClick={addUser}>Add</button>\r\n                <span style={{color: 'blue'}}> {totalUsers}</span>\r\n            </div>\r\n            <div className={s.error}>{error}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[] // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        const newName = e.currentTarget.value// need to fix\r\n        if (newName.trim() === '') {\r\n            setName('')\r\n            return setError(`Name is required`)\r\n        }\r\n        setError('')\r\n        setName(newName)\r\n    }\r\n\r\n    const addUser = () => {\r\n        addUserCallback(name)\r\n        if (name) {\r\n            alert(`Hello ${name}`) // need to fix\r\n            setName('')\r\n        }\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {if (e.key === 'Enter') addUser() }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            onKeyPressHandler={onKeyPressHandler}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<UserType[]>([\r\n       /* {_id: v1(), name: 'Nikola'},\r\n        {_id: v1(), name: 'Masha'},*/\r\n    ]); // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        let newUser = {_id: v1(), name: name}\r\n        if (newUser.name !== '') setUsers([...users, newUser]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\nimport s from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        // setEditMode() // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n        setEditMode(false)\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n        setEditMode(false)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        // setEditMode() // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n        setEditMode(true)\r\n    }\r\n\r\n    const spanClassName = `${s.editableSpan} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        <>&#9998; </>{children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        // setValue()\r\n        const defaultValue = restoreState<string>('editable-span-value', '')\r\n        setValue(defaultValue)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from '../../h6/HW6'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div >\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport {Redirect, Switch, Route} from 'react-router-dom'\r\nimport Error404 from './pages/Error404'\r\nimport Junior from './pages/Junior'\r\nimport JuniorPlus from './pages/JuniorPlus'\r\nimport PreJunior from './pages/PreJunior'\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus',\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n                <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { PATH } from './Routes'\r\nimport s from './Header.module.css'\r\n\r\nfunction Header() {\r\n    return (\r\n            <nav>\r\n                <ul className={s.links}>\r\n                    <li>\r\n                        <NavLink to={PATH.PRE_JUNIOR} className={s.link} activeClassName={s.active}>pre-junior</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to={PATH.JUNIOR} className={s.link} activeClassName={s.active}>junior</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to={PATH.JUNIOR_PLUS} className={s.link} activeClassName={s.active}>junior+</NavLink>\r\n                    </li>\r\n                    <span className={s.square}/>\r\n                </ul>\r\n            </nav>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport {HashRouter} from 'react-router-dom'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\nimport s from './Header.module.css'\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n                <div className={s.bgc}>\r\n                    <Header/>\r\n                </div>\r\n                <Routes/>\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW5 from '../../../p2-homeworks/h5/HW5'\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <HW5/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}